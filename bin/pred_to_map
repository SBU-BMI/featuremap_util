#!/usr/bin/env bash

NORMAL="\\033[0;39m"
RED="\\033[1;31m"
# Check input
if [[ "$#" -eq "0" ]]; then
  echo "No arguments supplied"
  printf "    ${RED}wsi type? svs, tif, or scn?${NORMAL}\n"
  exit 1
fi
ext="$1"
if [[ "$#" -eq "2" ]]; then
  do_png=1
else
  do_png=0
fi

# Temporary directory
uuid=$(python -c 'import sys,uuid; sys.stdout.write(uuid.uuid4().hex)') || uuid=$(uuidgen)
mydir="/tmp/$uuid"
mkdir -p "$mydir"

# Temporary directory
uuid1=$(python -c 'import sys,uuid; sys.stdout.write(uuid.uuid4().hex)') || uuid1=$(uuidgen)
mydir1="/tmp/$uuid1"
mkdir -p "$mydir1"

# Step 1
# Prediction to PNG
/app/src/get_grayscale_heatmaps/get_grayscale_heatmap.sh "$ext" "$mydir"
if [[ $? -eq 0 ]]; then
  # Step 2
  # PNG to CSV
  slide='/data/wsi'
  python /app/src/png_to_csv_map.py "$mydir" "$mydir1" "$slide" "$ext"
  if [[ $? -eq 0 ]]; then
    # Step 3
    # CSV to JSON
    output='/data/output'
    python /app/src/csv_to_json.py "$mydir1" "$output" "probability"
    if [[ $? -eq 0 ]]; then
      if [[ "$do_png" -eq 1 ]]; then
        cp "$mydir/*.png" "$output"
      fi
      rm -rf "$mydir"
      rm -rf "$mydir1"
    else
      echo "step 3 failed"
    fi
  else
    echo "step 2 failed"
  fi
else
  echo "step 1 failed"
fi
